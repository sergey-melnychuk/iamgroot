{
    "openrpc": "1.0.0-rc1",
    "info": {
        "version": "0.3.0",
        "title": "StarkNet Trace API",
        "license": {}
    },
    "servers": [],
    "methods": [
        {
            "name": "starknet_traceTransaction",
            "summary": "For a given executed transaction, return the trace of its execution, including internal calls",
            "description": "Returns the execution trace of the transaction designated by the input hash",
            "params": [
                {
                    "name": "transaction_hash",
                    "summary": "The hash of the transaction to trace",
                    "required": true,
                    "schema": {
                        "$ref": "./api/starknet_api_openrpc.json#/components/schemas/TXN_HASH"
                    }
                }
            ],
            "result": {
                "name": "trace",
                "description": "The function call trace of the transaction designated by the given hash",
                "schema": {
                    "$ref": "#/components/schemas/TRACE_ROOT"
                }
            },
            "errors": [
                {
                    "$ref": "#/components/errors/INVALID_TXN_HASH"
                },
                {
                    "$ref": "#/components/errors/NO_TRACE_AVAILABLE"
                }
            ]
        },
        {
            "name": "starknet_traceBlockTransactions",
            "summary": "Retrieve traces for all transactions in the given block",
            "description": "Returns the execution traces of all transactions included in the given block",
            "params": [
                {
                    "name": "block_hash",
                    "summary": "The hash of the requested block",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/BLOCK_HASH"
                    }
                }
            ],
            "result": {
                "name": "traces",
                "description": "The traces of all transactions in the block",
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "description": "A single pair of transaction hash and corresponding trace",
                        "properties": {
                            "transaction_hash": {
                                "$ref": "#/components/schemas/FELT"
                            },
                            "trace_root": {
                                "$ref": "#/components/schemas/TRACE_ROOT"
                            }
                        }
                    }
                }
            },
            "errors": [
                {
                    "$ref": "#/components/errors/INVALID_BLOCK_HASH"
                }
            ]
        }
    ],
    "components": {
        "contentDescriptors": {},
        "schemas": {
            "TRACE_ROOT": {
                "type": "object",
                "description": "The root of a transaction trace",
                "summary": "Transaction call trace root",
                "properties": {
                    "nonce": {
                        "title": "Nonce",
                        "description": "The nonce provided for the transaction invoked",
                        "$ref": "#/components/schemas/FELT"
                    },
                    "signature": {
                        "title": "Signature",
                        "description": "The signature/witness provided for the transaction",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FELT"
                        }
                    },
                    "function_invocation": {
                        "$ref": "#/components/schemas/FUNCTION_INVOCATION"
                    }
                }
            },
            "NESTED_CALL": {
                "$ref": "#/components/schemas/FUNCTION_INVOCATION"
            },
            "FUNCTION_INVOCATION": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/FUNCTION_CALL"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "caller_address": {
                                "title": "Caller Address",
                                "description": "The address of the invoking contract. 0 for the root invocation",
                                "$ref": "#/components/schemas/FELT"
                            },
                            "code_address": {
                                "title": "Code Address",
                                "description": "The address where the code for this contract is stored in the state",
                                "$ref": "#/components/schemas/FELT"
                            },
                            "entry_point_type": {
                                "$ref": "#/components/schemas/ENTRY_POINT_TYPE"
                            },
                            "call_type": {
                                "$ref": "#/components/schemas/CALL_TYPE"
                            },
                            "result": {
                                "title": "Invocation Result",
                                "description": "The value returned from the function invocation",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FELT"
                                }
                            },
                            "calls": {
                                "title": "Nested Calls",
                                "description": "The calls made by this invocation",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/NESTED_CALL"
                                }
                            },
                            "events": {
                                "title": "Invocation Events",
                                "description": "The events emitted in this invocation",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EVENT"
                                }
                            },
                            "messages": {
                                "title": "L1 Messages",
                                "description": "The messages sent by this invocation to L1",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MSG_TO_L1"
                                }
                            }
                        }
                    }
                ]
            },
            "ENTRY_POINT_TYPE": {
                "type": "string",
                "enum": [
                    "EXTERNAL",
                    "L1_HANDLER",
                    "CONSTRUCTOR"
                ]
            },
            "CALL_TYPE": {
                "type": "string",
                "enum": [
                    "DELEGATE",
                    "CALL"
                ]
            },
            "FELT": {
                "$ref": "./api/starknet_api_openrpc.json#/components/schemas/FELT"
            },
            "FUNCTION_CALL": {
                "$ref": "./api/starknet_api_openrpc.json#/components/schemas/FUNCTION_CALL"
            },
            "EVENT": {
                "$ref": "./api/starknet_api_openrpc.json#/components/schemas/EVENT_CONTENT"
            },
            "MSG_TO_L1": {
                "$ref": "./api/starknet_api_openrpc.json#/components/schemas/MSG_TO_L1"
            },
            "BLOCK_HASH": {
                "$ref": "./api/starknet_api_openrpc.json#/components/schemas/BLOCK_HASH"
            }
        },
        "errors": {
            "NO_TRACE_AVAILABLE": {
                "code": 10,
                "message": "No trace available for transaction",
                "data": {
                    "type": "object",
                    "description": "Extra information on why trace is not available. Either it wasn't executed yet (RECEIVED), or the transaction failed (REJECTED)",
                    "properties": {
                        "status": {
                            "type": "string",
                            "enum": [
                                "RECEIVED",
                                "REJECTED"
                            ]
                        }
                    }
                }
            },
            "INVALID_BLOCK_HASH": {
                "code": 24,
                "message": "Invalid block hash"
            },
            "INVALID_TXN_HASH": {
                "code": 25,
                "message": "Invalid transaction hash"
            }
        }
    }
}
